{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","actions/index.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc-helpers/with-bookstore-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/book-list/index.js","components/book-list/book-list.js","containers/book-list-container.js","containers/index.js","utils.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","bookAddedToCart","bookId","type","payload","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","Spinner","ErrorIndicator","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","BookList","books","map","id","key","BookListContainer","this","loading","error","Component","funcs","comp","reduceRight","prev","func","compose","connect","bookList","bindActionCreators","shoppingCart","items","cartItems","orderTotal","onIncrease","onDecrease","onDelete","item","idx","count","HomePage","CartPage","App","role","path","exact","component","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.560c9f85.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './shop-header.css';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n\r\n    return (\r\n        <header className=\"shop-header row\">\r\n             <Link to=\"/re-store/home\">\r\n                <div className=\"logo text-dark\">ReStore</div>\r\n            </Link>\r\n            <Link to=\"/re-store/cart\">\r\n                <div className=\"shopping-cart\">\r\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\r\n                    {numItems} items (${total})\r\n                </div>\r\n            </Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default ShopHeader;","const fetchBooksRequest = () => {\r\n   return {\r\n      type: 'FETCH_BOOKS_REQUEST'\r\n   }\r\n}\r\n\r\nconst fetchBooksSuccess = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks,\r\n    }\r\n}\r\n\r\nconst fetchBooksFailure = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error,\r\n    }\r\n}\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n      type: 'BOOK_ADDED_TO_CART',\r\n      payload: bookId\r\n    };\r\n};\r\n  \r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n      type: 'BOOK_REMOVED_FROM_CART',\r\n      payload: bookId\r\n    };\r\n};\r\n  \r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n      type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n      payload: bookId\r\n    };\r\n};\r\n\r\n// const fetchBooksOld = (bookstoreService, dispatch) => () => {\r\n//     dispatch(booksRequested());\r\n\r\n//     bookstoreService.getBooks()\r\n//         .then(data => {\r\n//             // dispatch action to store\r\n//         dispatch(booksLoaded(data))\r\n//         })\r\n//         .catch(err => dispatch(booksError(err)));\r\n// }\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n    dispatch( fetchBooksRequest() );\r\n \r\n    bookstoreService.getBooks()\r\n       .then((data) => {\r\n          dispatch( fetchBooksSuccess(data) )\r\n       })\r\n       .catch((err) => dispatch( fetchBooksFailure(err) ));\r\n }\r\n\r\nexport {\r\n    fetchBooks,\r\n}","import React from 'react';\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer,\r\n}","import React from 'react';\r\n\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped \r\n                                    {...props}\r\n                                    bookstoreService={bookstoreService} />)\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withBookstoreService;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return <div>loading...</div>\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Oops! Something went wrong. Please reload the page and try again.</div>\r\n}\r\n\r\nexport default ErrorIndicator;","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;","import React from 'react';\r\n\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book;\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"cover\" />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <span className=\"book-author\">{author}</span>\r\n                <span className=\"book-price\">{price}</span>\r\n                <button \r\n                    className=\"btn btn-info add-to-cart\"\r\n                    onClick={onAddedToCart}>\r\n                        Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListItem;","import BookList from './book-list';\r\n\r\nexport default BookList;","import React from 'react';\r\n\r\nimport BookListItem from '../book-list-item';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    const { id } = book\r\n                    return (\r\n                        <li key={id}>\r\n                            <BookListItem \r\n                                book={book}\r\n                                onAddedToCart={() => onAddedToCart(id)} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BookList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { fetchBooks, bookAddedToCart } from '../actions';\r\nimport { withBookstoreService } from '../components/hoc-helpers';\r\nimport { compose } from '../utils';\r\nimport Spinner from '../components/spinner';\r\nimport ErrorIndicator from '../components/error-indicator';\r\nimport BookList from '../components/book-list'\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks(); \r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return <BookList \r\n                    books={books}\r\n                    onAddedToCart={onAddedToCart} />\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n    return {\r\n        books,\r\n        loading,\r\n        error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    \r\n    return bindActionCreators({\r\n        fetchBooks: fetchBooks(bookstoreService),\r\n        onAddedToCart: bookAddedToCart,\r\n     }, dispatch)\r\n\r\n}\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer)\r\n","import BookListContainer from './book-list-container';\r\n\r\nexport default BookListContainer;","const compose = (...funcs) => (comp) => {\r\n   return funcs.reduceRight((prev, func) => func(prev), comp)\r\n}\r\n\r\nexport {\r\n   compose\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart,\r\n} from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n\r\n    const renderRow = (item, idx) => {\r\n        const {id, title, count, total} = item;\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button className=\"btn btn-outline-danger btn-sm float-right\"\r\n                            onClick={() => onDelete(id)}>\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                    <button className=\"btn btn-outline-success btn-sm float-right\"\r\n                            onClick={() => onIncrease(id)}>\r\n                        <i className=\"fa fa-plus-circle\" />\r\n                    </button>\r\n                    <button className=\"btn btn-outline-warning btn-sm float-right\"\r\n                            onClick={() => onDecrease(id)}>\r\n                        <i className=\"fa fa-minus-circle\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Total</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { items.map(renderRow) }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       onIncrease: (id) => dispatch( bookAddedToCart(id) ),\r\n       onDecrease: (id) => dispatch ( bookRemovedFromCart(id) ),\r\n       onDelete: (id) => dispatch( allBooksRemovedFromCart(id) )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\n\r\nimport BookListContainer from '../../containers';\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookListContainer />\r\n            <ShoppingCartTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n    return <div>Cart Page</div>\r\n}\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role=\"main\" className=\"app container\">\r\n            <ShopHeader numItems={5} total={210} />\r\n            <Switch>\r\n                <Route path='/re-store/' exact component={HomePage} />\r\n                <Route path='/re-store/home/' exact component={HomePage} />\r\n                <Route path='/re-store/cart/' component={CartPage} />\r\n                <Redirect to='/re-store/' />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Prodaction-Ready Microservices',\r\n            author: 'Susan J. Fowler',\r\n            price: 32,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Release it!',\r\n            author: 'Michael T. Nygard',\r\n            price: 45,\r\n            coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'\r\n        }\r\n    ]\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (Math.random() > .85) {\r\n                    reject(new Error('Something bad happened'))\r\n                } else {\r\n                    resolve(this.data)\r\n                }\r\n            }, 700)\r\n        })\r\n    }\r\n}","const updateBookList = (state, action) => {\r\n\r\n   if (state === undefined) {\r\n      return {\r\n         books: [],\r\n         loading: true,\r\n         error: false,\r\n      }\r\n   }\r\n\r\n   switch(action.type) {\r\n      case 'FETCH_BOOKS_REQUEST':\r\n         return {\r\n            books: [],\r\n            loading: true,\r\n            error: false,\r\n         }\r\n\r\n      case 'FETCH_BOOKS_SUCCESS':\r\n         return {\r\n            books: action.payload,\r\n            loading: false,\r\n            error: false,\r\n         }\r\n\r\n      case 'FETCH_BOOKS_FAILURE':\r\n         return {\r\n            books: [],\r\n            loading: false,\r\n            error: action.payload,\r\n         }\r\n      \r\n      default:\r\n         return state.bookList\r\n   }\r\n}\r\n\r\nexport default updateBookList","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n   if (item.count === 0) {\r\n      return [\r\n         ...cartItems.slice(0, idx),\r\n         ...cartItems.slice(idx + 1),\r\n      ]\r\n   }\r\n\r\n   if (idx === -1) {\r\n      return [\r\n         ...cartItems,\r\n         item\r\n      ]\r\n   } else {\r\n      return [\r\n         ...cartItems.slice(0, idx),\r\n         item,\r\n         ...cartItems.slice(idx + 1),\r\n      ]\r\n   }\r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n\r\n   const { id = book.id, title = book.title, count = 0, total = 0 } = item;\r\n\r\n   return {\r\n      id,\r\n      title,\r\n      count: count + quantity,\r\n      total: total + quantity * book.price,\r\n   }\r\n}\r\n\r\nconst updateOrder = (state, payload, quantity) => {\r\n\r\n   const { bookList: { books }, shoppingCart: { cartItems } } = state;\r\n   const id = payload;\r\n   const book = books.find((book) => book.id === id);\r\n   const idx = cartItems.findIndex(({id}) => id === book.id);\r\n   const item = cartItems.find(({id}) => id === book.id);\r\n\r\n   const newItem = updateCartItem(book, item, quantity);\r\n\r\n   return {\r\n      orderTotal: 0,\r\n      cartItems: updateCartItems(cartItems, newItem, idx)\r\n   }\r\n}\r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n   if (state === undefined) {\r\n      return {\r\n         cartItems: [],\r\n         orderTotal: 0,\r\n      }\r\n   }\r\n\r\n   switch(action.type) {\r\n      case 'BOOK_ADDED_TO_CART':\r\n         return updateOrder(state, action.payload, 1)\r\n\r\n      case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n         const item = state.shoppingCart.cartItems.find((book) => book.id ===action.payload);\r\n         return updateOrder(state, action.payload, -item.count)\r\n         \r\n      case 'BOOK_REMOVED_FROM_CART':\r\n         return updateOrder(state, action.payload, -1)\r\n\r\n      default: \r\n         return state.shoppingCart\r\n   }\r\n}\r\n\r\nexport default updateShoppingCart","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reducer = (state, action) => {\r\n   return {\r\n      bookList: updateBookList(state, action),\r\n      shoppingCart: updateShoppingCart(state, action)\r\n   }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst logMiddleware = () => (next) => (action) => {\r\n   console.log(action.type);\r\n   return next(action)\r\n}\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n   if (typeof action === 'string') {\r\n      return next({\r\n         type: action\r\n      })\r\n   }\r\n   return next(action)\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware(\r\n   thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\nstore.dispatch(\"HELLO_WORLD\");\r\n\r\nconst myAction = (dispatch) => {\r\n   setTimeout(() => {\r\n      dispatch('MY_TEST_ACTION')\r\n   }, 2000) \r\n}\r\n\r\nstore.dispatch(myAction)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <BookstoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}